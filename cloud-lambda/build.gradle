buildscript {
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
        classpath("org.springframework.boot.experimental:spring-boot-thin-gradle-plugin:1.0.25.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.1")
    }

}

plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.springframework.boot.experimental.thin-launcher'


ext {
    set('springCloudVersion', "2020.0.0")
}

version = '1.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws'
    implementation 'com.amazonaws:aws-lambda-java-events:3.7.0'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

import com.github.jengelman.gradle.plugins.shadow.transformers.*

assemble.dependsOn = [shadowJar, thinJar]

jar {
    manifest {
        attributes 'Main-Class': 'com.home.demos.SpringCloudLambdaApplication'
    }
}

shadowJar {
    classifier = 'aws'
    dependencies {
        exclude(
                dependency("org.springframework.cloud:spring-cloud-function-web:3.1.0"))
    }
    // Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = "append"
    }
}
